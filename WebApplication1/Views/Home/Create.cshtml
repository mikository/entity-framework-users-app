@model WebApplication1.Models.User

@using (Html.BeginForm("Create", "Home", new { ReturnUrl = ViewBag.ReturnUrl },
            FormMethod.Post, new { @class = "formCreate" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Create New User</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="button" class="btn btn-default" id="btnCreateUser">Create</button>
            </div>
        </div>
    </div>
}

<script>
    $('#btnCreateUser').click(ev => {
        let data = $('.formCreate').serializeArray();

        $.ajax({
            url: "/Home/Create",
            type: "POST",
            data: data,
            success: (xhr) => {
                reloadList();
            },
            error: (error) => {
                alert(error);
            }
        })
        ev.preventDefault();
    })
</script>
